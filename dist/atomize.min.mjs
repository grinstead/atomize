var n={},q={},t={},u={},w={};
function y(a){return function(b){function g(d){var c=void 0===d?a.o:null===d?a.i:"boolean"===typeof d?a.g:"number"===typeof d?a.j:"string"===typeof d?a.l:"function"===typeof d?a.h:"symbol"===typeof d?a.m:d instanceof Map?a.Map:d instanceof Set?a.Set:Array.isArray(d)?a.Array:(c=Object.getPrototypeOf(d))&&c!==Object.prototype?a.instance:a.object;var k=r,p=m,x=e.length;r=d;m=v;c(d,f)?0<=m&&h.set(d,~m):0>m&&h.delete(d);if(x===e.length)throw Error("Value encoded into nothing "+String(d));r=k;m=p}function f(d,
c){if(c===n)e.push(d);else if(c===q)d===(d|0)&&e.push(0),e.push(d);else if(c===u)l.push(e.push(d)-1);else if(c===w){c=l.pop();var k=e.length,p=k<<3|e[c];if(p>>3!==k)throw Error("value too large to encode "+String(d));e[c]=p}else if(d===t)r!==n&&(0<=m&&(m=~m),h.set(r,m),r=n);else if(0<=m&&(m=~m,h.set(r,0)),v++,c=h.get(d),null!=c){if(0===c)throw Error("infinite loop when encoding "+d);e.push(c)}else g(d)}var e=[],h=new Map,l=[],v=0,m=0,r=n;g(b);return e}}function z(a,b){b(void 0,n)}
function A(a,b){b(null,n)}function B(a,b){b(a,n)}function C(a,b){if(a===(a|0))return b(a,q),!0;b(a,n);return a===a}function D(a,b){b(t);b(1,u);for(var g=a.length,f=0;f<g;f++)b(a[f]);b(a,w);return!0}function E(a,b){b(a,n);return!0}function F(a,b){b(t);b(3,u);a.forEach(function(g,f){b(f)});b(a,w);a.forEach(function(g){b(g)});return!0}function G(a,b){b(t);b(4,u);a.forEach(function(g){b(g)});b(a,w);return!0}
function H(a,b){b(t);b(2,u);for(var g=Object.keys(a),f=g.length,e=0;e<f;e++)b(g[e]);b(a,w);for(e=0;e<f;e++)b(a[g[e]]);return!0}function I(a,b){return a?function(g,f){f(5,u);var e=a(g,f);f(g,w);return e}:b}
function J(a,b,g,f){if(f!==(f|0))return f;if(0>f)return a[~f];switch(f&7){case 0:return g();case 1:var e=[];a.push(e);K(a,e,b,g,f>>3);return n;case 2:e={};a.push(e);var h=[];K(a,h,b,g,f>>3);f=h.length;for(var l=0;l<f;l++)e[h[l]]=L(a,b,g);return n;case 3:e=new Map;a.push(e);h=[];K(a,h,b,g,f>>3);f=h.length;for(l=0;l<f;l++)e.set(h[l],L(a,b,g));return n;case 4:e=new Set;a.push(e);h=[];K(a,h,b,g,f>>3);f=h.length;for(l=0;l<f;l++)e.add(h[l]);return n;case 5:return b(function(){return L(a,b,g)});default:throw Error("Rebuilder TODO "+
f);}}function L(a,b,g){var f=a.length;b=J(a,b,g,g());if(b===n)return a[f];a.push(b);return b}function K(a,b,g,f,e){for(var h=f(e);h!==w;h=f(e)){var l=a.length;h=J(a,g,f,h);h===n?b.push(a[l]):(a.push(h),b.push(h))}};function M(a){throw Error("No way to atomize "+String(a));}function N(a,b){b(a,q);return!0}export const AS_IS=q;export const atomizer=function(a){a=void 0===a?{}:a;var b=a.keepUnknownsAsIs?N:M;return y({o:I(a["void"],z),i:I(a["null"],A),g:I(a["boolean"],B),j:I(a.number,C),Array:I(a.Array,D),l:I(a.string,E),Map:I(a.Map,F),Set:I(a.Set,G),object:I(a.object,H),h:I(a["function"],b),m:I(a.symbol,b),instance:I(a.instance,b)})};
export const rebuilder=function(a){return function(b){var g=0,f=b.length,e=L([],a,function(h){if(g===h)return w;if(g===f)throw Error("Incomplete data");return b[g++]});if(g!==f)throw Error("rebuilder given excess content");return e}};
export const serialize=function(a){function b(){var d=a[h++];if(0===d||d!==(d|0)){var c=0===d?a[h++]:d;if(c!==c)g(80);else if(void 0===c)g(16);else if(null===c)g(32);else if("boolean"===typeof c)g(c?48:64);else if("number"===typeof c)if(c===(c|0)){c=0<=c?c<<1:-c<<1|1;var k=127&c<<3|4;if(c>>>=4){for(d=[k|128];c;)k=c&127,c>>>=7,d.push(c?k|128:k);l+=d.length;e.push(new Uint8Array(d))}else g(k)}else k=new Uint8Array(8),(new DataView(k.buffer)).setFloat64(0,c),g(96),l+=8,e.push(k);else"string"===typeof c?
(v||(v=new TextEncoder),k=f(13),c=v.encode(c),l+=c.byteLength,e.push(c),k()):console.error("TODO serialize "+String(c))}else if(0>d){c=~d<<2|2;do k=c&127,c>>>=7,g(c?k|128:k);while(c)}else{var p=d&7;c=d>>3;k=f(p<<1|1);switch(p){case 1:case 4:case 5:for(;h<c;)b();k();break;case 2:case 3:for(d=0;h<c;)d++,b();k();for(c=d;0<c;c--)b();break;default:throw Error("impossible "+d);}}}function g(d){l++;e.push(d)}function f(d){var c=e.push(0)-1;return function(){var k=l,p=127&k<<4|d;if(k>>>=3){for(var x=[p|128];k;)p=
k&127,k>>>=7,x.push(k?p|128:p);l+=x.length;e[c]=new Uint8Array(x)}else l++,e[c]=p}}var e=[],h=0,l=0,v=null;b();var m=new Uint8Array(l),r=0;e.forEach(function(d){"number"===typeof d?m[r++]=d:(m.set(d,r),r+=d.byteLength)});return m};
